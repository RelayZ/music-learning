<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.javaclimb.music.dao.SingerMapper">

<!--  整个Singer对象的属性集，在xml中返回值就叫做BaseResultMap"-->
  <resultMap id="BaseResultMap" type="com.javaclimb.music.domain.Singer">
    <id column="id" jdbcType="INTEGER" property="id"/>
    <result column="name" jdbcType="VARCHAR" property="name"/>
    <result column="sex" jdbcType="TINYINT" property="sex"/>
    <result column="pic" jdbcType="VARCHAR" property="pic"/>
    <result column="birth" jdbcType="TIMESTAMP" property="birth"/>
    <result column="location" jdbcType="VARCHAR" property="location"/>
    <result column="introduction" jdbcType="VARCHAR" property="introduction"/>
  </resultMap>

<!--  所有列 方便下面用 是个sql语句-->
  <sql id="Base_Column_List">
    id,name,sex,pic,birth,location,introduction
  </sql>

<!--  public int insert(Singer singer)-->
    <insert id="insert" parameterType="com.javaclimb.music.domain.Singer">
      insert into singer
<!--通用sql语句    前面加（ 后面加） suffix后面去掉逗号-->
      <trim prefix="(" suffix=")" suffixOverrides=",">
         <!--id不为空就会有id-->
        <if test="id != null">
          id,
        </if>
        <if test="name != null">
          name,
        </if>
        <if test="sex != null">
          sex,
        </if>
        <if test="pic != null">
          pic,
        </if>
        <if test="birth != null" >
          birth,
        </if>
        <if test="location != null">
          location,
        </if>
        <if test="introduction != null">
          introduction,
        </if>
      </trim>

      <trim prefix=" value(" suffix=")" suffixOverrides=",">
        <if test="id != null">
          #{id},
        </if>
        <if test="name != null">
          #{name},
        </if>
        <if test="sex != null">
          #{sex},
        </if>
        <if test="pic != null">
          #{pic},
        </if>
        <if test="birth != null" >
          #{birth},
        </if>
        <if test="location != null">
          #{location},
        </if>
        <if test="introduction != null">
          #{introduction},
        </if>
      </trim>
    </insert>

<!--  public int update(Singer singer);-->
  <update id="update" parameterType="com.javaclimb.music.domain.Singer">
    update singer
<!--     借用mybatis的set-->
    <set>
      <if test="id != null">
        id = #{id},
      </if>
      <if test="name != null">
        name = #{name},
      </if>
      <if test="sex != null">
        sex = #{sex},
      </if>
      <if test="pic != null">
        pic = #{pic},
      </if>
      <if test="birth != null" >
        birth = #{birth},
      </if>
      <if test="location != null">
        location = #{location},
      </if>
      <if test="introduction != null">
        introduction = #{introduction},
      </if>
    </set>
    where id = #{id}
  </update>


<!--  public int delete(Integer id);-->
  <delete id="delete" parameterType="java.lang.Integer">
    delete from singer
    where id = #{id}
  </delete>

<!--  public Singer selectByPrimaryKey(Integer id);-->
<!--  返回值是BaseResultMap-->
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List" />
    from singer
    where id =#{id}
  </select>

<!--  public List<Singer> allSinger();-->
  <select id="allSinger" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from singer
  </select>

<!--  模糊查询的字符串交给前端-->
<!--  public List<Singer> singerOfName(String name);-->
  <select id="singerOfName" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List" />
    from singer
    where name like #{name}
  </select>

<!--  public List<Singer> singerOfSex(Integer sex);-->
  <select id="singerOfSex" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List" />
    from singer
    where sex = #{sex}
  </select>

</mapper>